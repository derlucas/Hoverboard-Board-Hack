ARM GAS  /tmp/ccpxvAQg.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"i2c.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.WiiNunchuck_INIT,"ax",%progbits
  16              		.align	1
  17              		.global	WiiNunchuck_INIT
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	WiiNunchuck_INIT:
  24              	.LFB67:
  25              		.file 1 "./Src/i2c.c"
   1:./Src/i2c.c   **** #include "i2c.h"
   2:./Src/i2c.c   **** #include "stm32f1xx_hal.h"
   3:./Src/i2c.c   **** 
   4:./Src/i2c.c   **** I2C_HandleTypeDef hi2c2;
   5:./Src/i2c.c   **** DMA_HandleTypeDef hdma_i2c2_rx;
   6:./Src/i2c.c   **** DMA_HandleTypeDef hdma_i2c2_tx;
   7:./Src/i2c.c   **** 
   8:./Src/i2c.c   **** volatile __IO struct WII_JOYdati wii_JOYdati;
   9:./Src/i2c.c   **** 
  10:./Src/i2c.c   **** /* I2C2 init function */
  11:./Src/i2c.c   **** void MX_I2C2_Init(void)
  12:./Src/i2c.c   **** {
  13:./Src/i2c.c   ****   __HAL_RCC_I2C2_CLK_ENABLE();
  14:./Src/i2c.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
  15:./Src/i2c.c   ****   
  16:./Src/i2c.c   ****   /* DMA1_Channel4_IRQn interrupt configuration */
  17:./Src/i2c.c   ****   HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 1, 4);
  18:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
  19:./Src/i2c.c   ****   /* DMA1_Channel5_IRQn interrupt configuration */
  20:./Src/i2c.c   ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 1, 3);
  21:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
  22:./Src/i2c.c   **** 
  23:./Src/i2c.c   ****   hi2c2.Instance = I2C2;
  24:./Src/i2c.c   ****   hi2c2.Init.ClockSpeed = 400000;
  25:./Src/i2c.c   ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
  26:./Src/i2c.c   ****   hi2c2.Init.OwnAddress1 = 0;
  27:./Src/i2c.c   ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
  28:./Src/i2c.c   ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  29:./Src/i2c.c   ****   hi2c2.Init.OwnAddress2 = 0;
  30:./Src/i2c.c   ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  31:./Src/i2c.c   ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  32:./Src/i2c.c   ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
  33:./Src/i2c.c   ****   {
ARM GAS  /tmp/ccpxvAQg.s 			page 2


  34:./Src/i2c.c   ****     Error_Handler();
  35:./Src/i2c.c   ****   }
  36:./Src/i2c.c   ****   wii_JOYdati.I2CTxDone = 0;
  37:./Src/i2c.c   ****   wii_JOYdati.I2CRxDone = 0;
  38:./Src/i2c.c   ****   wii_JOYdati.I2CERROR = 0;
  39:./Src/i2c.c   ****   wii_JOYdati.stato = 0;
  40:./Src/i2c.c   ****   
  41:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(I2C1_EV_IRQn); 
  42:./Src/i2c.c   ****   
  43:./Src/i2c.c   ****   WiiNunchuck_INIT();
  44:./Src/i2c.c   **** }
  45:./Src/i2c.c   **** 
  46:./Src/i2c.c   **** 
  47:./Src/i2c.c   **** 
  48:./Src/i2c.c   **** void WiiNunchuck_INIT(void){
  26              		.loc 1 48 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  49:./Src/i2c.c   ****     uint8_t ai2cBuffer[2];
  50:./Src/i2c.c   ****     
  51:./Src/i2c.c   ****     //-- START -- init WiiNunchuck
  52:./Src/i2c.c   ****     ai2cBuffer[0] = 0xF0;
  53:./Src/i2c.c   ****     ai2cBuffer[1] = 0x55;
  54:./Src/i2c.c   ****     //Originale
  55:./Src/i2c.c   ****     ai2cBuffer[0] = 0x40;
  39              		.loc 1 55 0
  40 0004 4023     		movs	r3, #64
  41 0006 8DF80430 		strb	r3, [sp, #4]
  56:./Src/i2c.c   ****     ai2cBuffer[1] = 0x00;
  42              		.loc 1 56 0
  43 000a 0023     		movs	r3, #0
  44 000c 8DF80530 		strb	r3, [sp, #5]
  57:./Src/i2c.c   ****     HAL_I2C_Master_Transmit_DMA(&hi2c2, 0xA4, (uint8_t*)ai2cBuffer, 2);
  45              		.loc 1 57 0
  46 0010 0223     		movs	r3, #2
  47 0012 01AA     		add	r2, sp, #4
  48 0014 A421     		movs	r1, #164
  49 0016 0848     		ldr	r0, .L4
  50 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit_DMA
  51              	.LVL0:
  52              	.L2:
  58:./Src/i2c.c   ****     while(wii_JOYdati.I2CTxDone ==0);
  53              		.loc 1 58 0 discriminator 1
  54 001c 074B     		ldr	r3, .L4+4
  55 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  56 0020 002B     		cmp	r3, #0
  57 0022 FBD0     		beq	.L2
ARM GAS  /tmp/ccpxvAQg.s 			page 3


  59:./Src/i2c.c   ****     wii_JOYdati.I2CTxDone = 0;
  58              		.loc 1 59 0
  59 0024 054C     		ldr	r4, .L4+4
  60 0026 0025     		movs	r5, #0
  61 0028 2573     		strb	r5, [r4, #12]
  60:./Src/i2c.c   ****     HAL_Delay(10);
  62              		.loc 1 60 0
  63 002a 0A20     		movs	r0, #10
  64 002c FFF7FEFF 		bl	HAL_Delay
  65              	.LVL1:
  61:./Src/i2c.c   ****     wii_JOYdati.done = 0;
  66              		.loc 1 61 0
  67 0030 2571     		strb	r5, [r4, #4]
  62:./Src/i2c.c   **** }
  68              		.loc 1 62 0
  69 0032 03B0     		add	sp, sp, #12
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 12
  72              		@ sp needed
  73 0034 30BD     		pop	{r4, r5, pc}
  74              	.L5:
  75 0036 00BF     		.align	2
  76              	.L4:
  77 0038 00000000 		.word	hi2c2
  78 003c 00000000 		.word	wii_JOYdati
  79              		.cfi_endproc
  80              	.LFE67:
  82              		.section	.text.MX_I2C2_Init,"ax",%progbits
  83              		.align	1
  84              		.global	MX_I2C2_Init
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	MX_I2C2_Init:
  91              	.LFB66:
  12:./Src/i2c.c   ****   __HAL_RCC_I2C2_CLK_ENABLE();
  92              		.loc 1 12 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 00B5     		push	{lr}
  97              	.LCFI3:
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 14, -4
 100 0002 83B0     		sub	sp, sp, #12
 101              	.LCFI4:
 102              		.cfi_def_cfa_offset 16
 103              	.LBB2:
  13:./Src/i2c.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 104              		.loc 1 13 0
 105 0004 224B     		ldr	r3, .L10
 106 0006 DA69     		ldr	r2, [r3, #28]
 107 0008 42F48002 		orr	r2, r2, #4194304
 108 000c DA61     		str	r2, [r3, #28]
 109 000e DA69     		ldr	r2, [r3, #28]
 110 0010 02F48002 		and	r2, r2, #4194304
ARM GAS  /tmp/ccpxvAQg.s 			page 4


 111 0014 0092     		str	r2, [sp]
 112 0016 009A     		ldr	r2, [sp]
 113              	.LBE2:
 114              	.LBB3:
  14:./Src/i2c.c   ****   
 115              		.loc 1 14 0
 116 0018 5A69     		ldr	r2, [r3, #20]
 117 001a 42F00102 		orr	r2, r2, #1
 118 001e 5A61     		str	r2, [r3, #20]
 119 0020 5B69     		ldr	r3, [r3, #20]
 120 0022 03F00103 		and	r3, r3, #1
 121 0026 0193     		str	r3, [sp, #4]
 122 0028 019B     		ldr	r3, [sp, #4]
 123              	.LBE3:
  17:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 124              		.loc 1 17 0
 125 002a 0422     		movs	r2, #4
 126 002c 0121     		movs	r1, #1
 127 002e 0E20     		movs	r0, #14
 128 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 129              	.LVL2:
  18:./Src/i2c.c   ****   /* DMA1_Channel5_IRQn interrupt configuration */
 130              		.loc 1 18 0
 131 0034 0E20     		movs	r0, #14
 132 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 133              	.LVL3:
  20:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 134              		.loc 1 20 0
 135 003a 0322     		movs	r2, #3
 136 003c 0121     		movs	r1, #1
 137 003e 0F20     		movs	r0, #15
 138 0040 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 139              	.LVL4:
  21:./Src/i2c.c   **** 
 140              		.loc 1 21 0
 141 0044 0F20     		movs	r0, #15
 142 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 143              	.LVL5:
  23:./Src/i2c.c   ****   hi2c2.Init.ClockSpeed = 400000;
 144              		.loc 1 23 0
 145 004a 1248     		ldr	r0, .L10+4
 146 004c 124B     		ldr	r3, .L10+8
 147 004e 0360     		str	r3, [r0]
  24:./Src/i2c.c   ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 148              		.loc 1 24 0
 149 0050 124B     		ldr	r3, .L10+12
 150 0052 4360     		str	r3, [r0, #4]
  25:./Src/i2c.c   ****   hi2c2.Init.OwnAddress1 = 0;
 151              		.loc 1 25 0
 152 0054 0023     		movs	r3, #0
 153 0056 8360     		str	r3, [r0, #8]
  26:./Src/i2c.c   ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 154              		.loc 1 26 0
 155 0058 C360     		str	r3, [r0, #12]
  27:./Src/i2c.c   ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 156              		.loc 1 27 0
 157 005a 4FF48042 		mov	r2, #16384
ARM GAS  /tmp/ccpxvAQg.s 			page 5


 158 005e 0261     		str	r2, [r0, #16]
  28:./Src/i2c.c   ****   hi2c2.Init.OwnAddress2 = 0;
 159              		.loc 1 28 0
 160 0060 4361     		str	r3, [r0, #20]
  29:./Src/i2c.c   ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 161              		.loc 1 29 0
 162 0062 8361     		str	r3, [r0, #24]
  30:./Src/i2c.c   ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 163              		.loc 1 30 0
 164 0064 C361     		str	r3, [r0, #28]
  31:./Src/i2c.c   ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 165              		.loc 1 31 0
 166 0066 0362     		str	r3, [r0, #32]
  32:./Src/i2c.c   ****   {
 167              		.loc 1 32 0
 168 0068 FFF7FEFF 		bl	HAL_I2C_Init
 169              	.LVL6:
 170 006c 68B9     		cbnz	r0, .L9
 171              	.L7:
  36:./Src/i2c.c   ****   wii_JOYdati.I2CRxDone = 0;
 172              		.loc 1 36 0
 173 006e 0C4B     		ldr	r3, .L10+16
 174 0070 0022     		movs	r2, #0
 175 0072 1A73     		strb	r2, [r3, #12]
  37:./Src/i2c.c   ****   wii_JOYdati.I2CERROR = 0;
 176              		.loc 1 37 0
 177 0074 5A73     		strb	r2, [r3, #13]
  38:./Src/i2c.c   ****   wii_JOYdati.stato = 0;
 178              		.loc 1 38 0
 179 0076 9A73     		strb	r2, [r3, #14]
  39:./Src/i2c.c   ****   
 180              		.loc 1 39 0
 181 0078 DA73     		strb	r2, [r3, #15]
  41:./Src/i2c.c   ****   
 182              		.loc 1 41 0
 183 007a 1F20     		movs	r0, #31
 184 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 185              	.LVL7:
  43:./Src/i2c.c   **** }
 186              		.loc 1 43 0
 187 0080 FFF7FEFF 		bl	WiiNunchuck_INIT
 188              	.LVL8:
  44:./Src/i2c.c   **** 
 189              		.loc 1 44 0
 190 0084 03B0     		add	sp, sp, #12
 191              	.LCFI5:
 192              		.cfi_remember_state
 193              		.cfi_def_cfa_offset 4
 194              		@ sp needed
 195 0086 5DF804FB 		ldr	pc, [sp], #4
 196              	.L9:
 197              	.LCFI6:
 198              		.cfi_restore_state
  34:./Src/i2c.c   ****   }
 199              		.loc 1 34 0
 200 008a FFF7FEFF 		bl	Error_Handler
 201              	.LVL9:
ARM GAS  /tmp/ccpxvAQg.s 			page 6


 202 008e EEE7     		b	.L7
 203              	.L11:
 204              		.align	2
 205              	.L10:
 206 0090 00100240 		.word	1073876992
 207 0094 00000000 		.word	hi2c2
 208 0098 00580040 		.word	1073764352
 209 009c 801A0600 		.word	400000
 210 00a0 00000000 		.word	wii_JOYdati
 211              		.cfi_endproc
 212              	.LFE66:
 214              		.section	.text.nunchuk_decode_byte,"ax",%progbits
 215              		.align	1
 216              		.global	nunchuk_decode_byte
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	nunchuk_decode_byte:
 223              	.LFB69:
  63:./Src/i2c.c   **** 
  64:./Src/i2c.c   **** 
  65:./Src/i2c.c   **** void WiiNunchuck_TASK(void){
  66:./Src/i2c.c   ****   uint8_t ai2cBuffer[7];
  67:./Src/i2c.c   ****   uint8_t temp;
  68:./Src/i2c.c   ****   
  69:./Src/i2c.c   ****   switch(wii_JOYdati.stato){
  70:./Src/i2c.c   ****     case 0:
  71:./Src/i2c.c   ****       wii_JOYdati.I2CTxDone = 0;
  72:./Src/i2c.c   ****       ai2cBuffer[0] = 0x00;
  73:./Src/i2c.c   ****       HAL_I2C_Master_Transmit_DMA(&hi2c2, 0xA4, (uint8_t*)ai2cBuffer, 1);
  74:./Src/i2c.c   ****       wii_JOYdati.stato = 12;
  75:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
  76:./Src/i2c.c   ****     break;
  77:./Src/i2c.c   ****   
  78:./Src/i2c.c   ****     case 1:
  79:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) >= 7){             
  80:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
  81:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
  82:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
  83:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
  84:./Src/i2c.c   ****       }
  85:./Src/i2c.c   ****       if(wii_JOYdati.I2CTxDone){
  86:./Src/i2c.c   ****         wii_JOYdati.stato = 2;
  87:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();    
  88:./Src/i2c.c   ****       }
  89:./Src/i2c.c   ****       if(wii_JOYdati.I2CERROR){
  90:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
  91:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
  92:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
  93:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
  94:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
  95:./Src/i2c.c   ****         wii_JOYdati.ax = 127;        
  96:./Src/i2c.c   ****       }      
  97:./Src/i2c.c   ****     break;
  98:./Src/i2c.c   ****   
  99:./Src/i2c.c   ****     case 2:
ARM GAS  /tmp/ccpxvAQg.s 			page 7


 100:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) > 1){             
 101:./Src/i2c.c   ****         wii_JOYdati.stato = 3;      
 102:./Src/i2c.c   ****       }
 103:./Src/i2c.c   ****     break;
 104:./Src/i2c.c   ****   
 105:./Src/i2c.c   ****     case 3:
 106:./Src/i2c.c   ****       wii_JOYdati.I2CTxDone = 0;
 107:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 108:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;      
 109:./Src/i2c.c   ****       HAL_I2C_Master_Receive_DMA(&hi2c2, 0xA5, (uint8_t*)wii_JOYdati.ai2cBuffer, 6);
 110:./Src/i2c.c   ****       wii_JOYdati.stato = 4;     
 111:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick(); 
 112:./Src/i2c.c   ****     break;
 113:./Src/i2c.c   ****   
 114:./Src/i2c.c   ****     case 4:
 115:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) > 50){             
 116:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 117:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 118:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 119:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 120:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 121:./Src/i2c.c   ****         wii_JOYdati.ax = 127;        
 122:./Src/i2c.c   ****       }
 123:./Src/i2c.c   ****       if(wii_JOYdati.I2CERROR){
 124:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 125:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 126:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 127:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 128:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 129:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
 130:./Src/i2c.c   ****       }          
 131:./Src/i2c.c   ****       if(wii_JOYdati.I2CRxDone){
 132:./Src/i2c.c   ****         HAL_NVIC_DisableIRQ(DMA1_Channel5_IRQn);
 133:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 134:./Src/i2c.c   ****         //Copia dati
 135:./Src/i2c.c   ****         wii_JOYdati.ay = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[1]);
 136:./Src/i2c.c   ****         wii_JOYdati.ax = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[0]);
 137:./Src/i2c.c   ****         temp = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[5]);
 138:./Src/i2c.c   ****         
 139:./Src/i2c.c   ****         wii_JOYdati.bc = temp & 0x02;
 140:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc >> 1;
 141:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc & 0x01;
 142:./Src/i2c.c   ****         wii_JOYdati.bz = temp & 0x01;
 143:./Src/i2c.c   ****         wii_JOYdati.done = 1;        
 144:./Src/i2c.c   **** 
 145:./Src/i2c.c   ****         HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 146:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 147:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 148:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 149:./Src/i2c.c   ****         
 150:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
 151:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 152:./Src/i2c.c   ****       }
 153:./Src/i2c.c   ****     break;
 154:./Src/i2c.c   ****   
 155:./Src/i2c.c   ****     case 10:
 156:./Src/i2c.c   ****       wii_JOYdati.I2CTxDone = 0;
ARM GAS  /tmp/ccpxvAQg.s 			page 8


 157:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 158:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;
 159:./Src/i2c.c   ****       wii_JOYdati.stato = 11;
 160:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick(); 
 161:./Src/i2c.c   ****     break;
 162:./Src/i2c.c   ****   
 163:./Src/i2c.c   ****     case 11:
 164:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) >= 1){             
 165:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 166:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 167:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 168:./Src/i2c.c   ****         wii_JOYdati.stato = 0;
 169:./Src/i2c.c   ****       }
 170:./Src/i2c.c   ****     break;
 171:./Src/i2c.c   ****     
 172:./Src/i2c.c   ****     case 12:
 173:./Src/i2c.c   ****       if(HAL_I2C_GetState(&hi2c2) == HAL_I2C_STATE_READY){
 174:./Src/i2c.c   ****         wii_JOYdati.stato = 1;
 175:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();        
 176:./Src/i2c.c   ****       }            
 177:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) >= 7){             
 178:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 179:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 180:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 181:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 182:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();        
 183:./Src/i2c.c   ****       }      
 184:./Src/i2c.c   ****     break;
 185:./Src/i2c.c   ****   
 186:./Src/i2c.c   ****   }
 187:./Src/i2c.c   **** }
 188:./Src/i2c.c   **** 
 189:./Src/i2c.c   ****   
 190:./Src/i2c.c   ****   
 191:./Src/i2c.c   ****   
 192:./Src/i2c.c   ****   
 193:./Src/i2c.c   ****   
 194:./Src/i2c.c   ****   
 195:./Src/i2c.c   **** uint8_t nunchuk_decode_byte (uint8_t x)
 196:./Src/i2c.c   **** {
 224              		.loc 1 196 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL10:
 197:./Src/i2c.c   ****     x = (x ^ 0x17) + 0x17;
 230              		.loc 1 197 0
 231 0000 80F01700 		eor	r0, r0, #23
 232              	.LVL11:
 233 0004 1730     		adds	r0, r0, #23
 234              	.LVL12:
 198:./Src/i2c.c   ****     return x;
 199:./Src/i2c.c   **** }
 235              		.loc 1 199 0
 236 0006 C0B2     		uxtb	r0, r0
 237 0008 7047     		bx	lr
ARM GAS  /tmp/ccpxvAQg.s 			page 9


 238              		.cfi_endproc
 239              	.LFE69:
 241              		.section	.text.WiiNunchuck_TASK,"ax",%progbits
 242              		.align	1
 243              		.global	WiiNunchuck_TASK
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu softvfp
 249              	WiiNunchuck_TASK:
 250              	.LFB68:
  65:./Src/i2c.c   ****   uint8_t ai2cBuffer[7];
 251              		.loc 1 65 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 30B5     		push	{r4, r5, lr}
 256              	.LCFI7:
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 5, -8
 260              		.cfi_offset 14, -4
 261 0002 83B0     		sub	sp, sp, #12
 262              	.LCFI8:
 263              		.cfi_def_cfa_offset 24
  69:./Src/i2c.c   ****     case 0:
 264              		.loc 1 69 0
 265 0004 744B     		ldr	r3, .L32
 266 0006 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 267 0008 DBB2     		uxtb	r3, r3
 268 000a 0C2B     		cmp	r3, #12
 269 000c 18D8     		bhi	.L13
 270 000e DFE803F0 		tbb	[pc, r3]
 271              	.L16:
 272 0012 07       		.byte	(.L15-.L16)/2
 273 0013 19       		.byte	(.L17-.L16)/2
 274 0014 40       		.byte	(.L18-.L16)/2
 275 0015 4B       		.byte	(.L19-.L16)/2
 276 0016 5C       		.byte	(.L20-.L16)/2
 277 0017 17       		.byte	(.L13-.L16)/2
 278 0018 17       		.byte	(.L13-.L16)/2
 279 0019 17       		.byte	(.L13-.L16)/2
 280 001a 17       		.byte	(.L13-.L16)/2
 281 001b 17       		.byte	(.L13-.L16)/2
 282 001c AA       		.byte	(.L21-.L16)/2
 283 001d B5       		.byte	(.L22-.L16)/2
 284 001e C3       		.byte	(.L23-.L16)/2
 285 001f 00       		.p2align 1
 286              	.L15:
  71:./Src/i2c.c   ****       ai2cBuffer[0] = 0x00;
 287              		.loc 1 71 0
 288 0020 6D4C     		ldr	r4, .L32
 289 0022 0023     		movs	r3, #0
 290 0024 2373     		strb	r3, [r4, #12]
  72:./Src/i2c.c   ****       HAL_I2C_Master_Transmit_DMA(&hi2c2, 0xA4, (uint8_t*)ai2cBuffer, 1);
 291              		.loc 1 72 0
 292 0026 02AA     		add	r2, sp, #8
ARM GAS  /tmp/ccpxvAQg.s 			page 10


 293 0028 02F8083D 		strb	r3, [r2, #-8]!
  73:./Src/i2c.c   ****       wii_JOYdati.stato = 12;
 294              		.loc 1 73 0
 295 002c 0123     		movs	r3, #1
 296 002e A421     		movs	r1, #164
 297 0030 6A48     		ldr	r0, .L32+4
 298 0032 FFF7FEFF 		bl	HAL_I2C_Master_Transmit_DMA
 299              	.LVL13:
  74:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
 300              		.loc 1 74 0
 301 0036 0C23     		movs	r3, #12
 302 0038 E373     		strb	r3, [r4, #15]
  75:./Src/i2c.c   ****     break;
 303              		.loc 1 75 0
 304 003a FFF7FEFF 		bl	HAL_GetTick
 305              	.LVL14:
 306 003e 2061     		str	r0, [r4, #16]
 307              	.L13:
 187:./Src/i2c.c   **** 
 308              		.loc 1 187 0
 309 0040 03B0     		add	sp, sp, #12
 310              	.LCFI9:
 311              		.cfi_remember_state
 312              		.cfi_def_cfa_offset 12
 313              		@ sp needed
 314 0042 30BD     		pop	{r4, r5, pc}
 315              	.L17:
 316              	.LCFI10:
 317              		.cfi_restore_state
  79:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 318              		.loc 1 79 0
 319 0044 FFF7FEFF 		bl	HAL_GetTick
 320              	.LVL15:
 321 0048 634B     		ldr	r3, .L32
 322 004a 1B69     		ldr	r3, [r3, #16]
 323 004c C01A     		subs	r0, r0, r3
 324 004e 0628     		cmp	r0, #6
 325 0050 06D9     		bls	.L24
  80:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 326              		.loc 1 80 0
 327 0052 614B     		ldr	r3, .L32
 328 0054 0022     		movs	r2, #0
 329 0056 1A73     		strb	r2, [r3, #12]
  81:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 330              		.loc 1 81 0
 331 0058 5A73     		strb	r2, [r3, #13]
  82:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 332              		.loc 1 82 0
 333 005a 9A73     		strb	r2, [r3, #14]
  83:./Src/i2c.c   ****       }
 334              		.loc 1 83 0
 335 005c 0A22     		movs	r2, #10
 336 005e DA73     		strb	r2, [r3, #15]
 337              	.L24:
  85:./Src/i2c.c   ****         wii_JOYdati.stato = 2;
 338              		.loc 1 85 0
 339 0060 5D4B     		ldr	r3, .L32
ARM GAS  /tmp/ccpxvAQg.s 			page 11


 340 0062 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 341 0064 73B9     		cbnz	r3, .L30
 342              	.L25:
  89:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 343              		.loc 1 89 0
 344 0066 5C4B     		ldr	r3, .L32
 345 0068 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 346 006a 002B     		cmp	r3, #0
 347 006c E8D0     		beq	.L13
  90:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 348              		.loc 1 90 0
 349 006e 5A4B     		ldr	r3, .L32
 350 0070 0022     		movs	r2, #0
 351 0072 1A73     		strb	r2, [r3, #12]
  91:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 352              		.loc 1 91 0
 353 0074 5A73     		strb	r2, [r3, #13]
  92:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 354              		.loc 1 92 0
 355 0076 9A73     		strb	r2, [r3, #14]
  93:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 356              		.loc 1 93 0
 357 0078 0A22     		movs	r2, #10
 358 007a DA73     		strb	r2, [r3, #15]
  94:./Src/i2c.c   ****         wii_JOYdati.ax = 127;        
 359              		.loc 1 94 0
 360 007c 7F22     		movs	r2, #127
 361 007e 5A70     		strb	r2, [r3, #1]
  95:./Src/i2c.c   ****       }      
 362              		.loc 1 95 0
 363 0080 1A70     		strb	r2, [r3]
 364 0082 DDE7     		b	.L13
 365              	.L30:
  86:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();    
 366              		.loc 1 86 0
 367 0084 544C     		ldr	r4, .L32
 368 0086 0223     		movs	r3, #2
 369 0088 E373     		strb	r3, [r4, #15]
  87:./Src/i2c.c   ****       }
 370              		.loc 1 87 0
 371 008a FFF7FEFF 		bl	HAL_GetTick
 372              	.LVL16:
 373 008e 2061     		str	r0, [r4, #16]
 374 0090 E9E7     		b	.L25
 375              	.L18:
 100:./Src/i2c.c   ****         wii_JOYdati.stato = 3;      
 376              		.loc 1 100 0
 377 0092 FFF7FEFF 		bl	HAL_GetTick
 378              	.LVL17:
 379 0096 504B     		ldr	r3, .L32
 380 0098 1B69     		ldr	r3, [r3, #16]
 381 009a C01A     		subs	r0, r0, r3
 382 009c 0128     		cmp	r0, #1
 383 009e CFD9     		bls	.L13
 101:./Src/i2c.c   ****       }
 384              		.loc 1 101 0
 385 00a0 4D4B     		ldr	r3, .L32
ARM GAS  /tmp/ccpxvAQg.s 			page 12


 386 00a2 0322     		movs	r2, #3
 387 00a4 DA73     		strb	r2, [r3, #15]
 388 00a6 CBE7     		b	.L13
 389              	.L19:
 106:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 390              		.loc 1 106 0
 391 00a8 4B4C     		ldr	r4, .L32
 392 00aa 0023     		movs	r3, #0
 393 00ac 2373     		strb	r3, [r4, #12]
 107:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;      
 394              		.loc 1 107 0
 395 00ae 6373     		strb	r3, [r4, #13]
 108:./Src/i2c.c   ****       HAL_I2C_Master_Receive_DMA(&hi2c2, 0xA5, (uint8_t*)wii_JOYdati.ai2cBuffer, 6);
 396              		.loc 1 108 0
 397 00b0 A373     		strb	r3, [r4, #14]
 109:./Src/i2c.c   ****       wii_JOYdati.stato = 4;     
 398              		.loc 1 109 0
 399 00b2 0623     		movs	r3, #6
 400 00b4 621D     		adds	r2, r4, #5
 401 00b6 A521     		movs	r1, #165
 402 00b8 4848     		ldr	r0, .L32+4
 403 00ba FFF7FEFF 		bl	HAL_I2C_Master_Receive_DMA
 404              	.LVL18:
 110:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick(); 
 405              		.loc 1 110 0
 406 00be 0423     		movs	r3, #4
 407 00c0 E373     		strb	r3, [r4, #15]
 111:./Src/i2c.c   ****     break;
 408              		.loc 1 111 0
 409 00c2 FFF7FEFF 		bl	HAL_GetTick
 410              	.LVL19:
 411 00c6 2061     		str	r0, [r4, #16]
 112:./Src/i2c.c   ****   
 412              		.loc 1 112 0
 413 00c8 BAE7     		b	.L13
 414              	.L20:
 115:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 415              		.loc 1 115 0
 416 00ca FFF7FEFF 		bl	HAL_GetTick
 417              	.LVL20:
 418 00ce 424B     		ldr	r3, .L32
 419 00d0 1B69     		ldr	r3, [r3, #16]
 420 00d2 C01A     		subs	r0, r0, r3
 421 00d4 3228     		cmp	r0, #50
 422 00d6 09D9     		bls	.L26
 116:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 423              		.loc 1 116 0
 424 00d8 3F4B     		ldr	r3, .L32
 425 00da 0022     		movs	r2, #0
 426 00dc 1A73     		strb	r2, [r3, #12]
 117:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 427              		.loc 1 117 0
 428 00de 5A73     		strb	r2, [r3, #13]
 118:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 429              		.loc 1 118 0
 430 00e0 9A73     		strb	r2, [r3, #14]
 119:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
ARM GAS  /tmp/ccpxvAQg.s 			page 13


 431              		.loc 1 119 0
 432 00e2 0A22     		movs	r2, #10
 433 00e4 DA73     		strb	r2, [r3, #15]
 120:./Src/i2c.c   ****         wii_JOYdati.ax = 127;        
 434              		.loc 1 120 0
 435 00e6 7F22     		movs	r2, #127
 436 00e8 5A70     		strb	r2, [r3, #1]
 121:./Src/i2c.c   ****       }
 437              		.loc 1 121 0
 438 00ea 1A70     		strb	r2, [r3]
 439              	.L26:
 123:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 440              		.loc 1 123 0
 441 00ec 3A4B     		ldr	r3, .L32
 442 00ee 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 443 00f0 4BB1     		cbz	r3, .L27
 124:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 444              		.loc 1 124 0
 445 00f2 394B     		ldr	r3, .L32
 446 00f4 0022     		movs	r2, #0
 447 00f6 1A73     		strb	r2, [r3, #12]
 125:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 448              		.loc 1 125 0
 449 00f8 5A73     		strb	r2, [r3, #13]
 126:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 450              		.loc 1 126 0
 451 00fa 9A73     		strb	r2, [r3, #14]
 127:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 452              		.loc 1 127 0
 453 00fc 0A22     		movs	r2, #10
 454 00fe DA73     		strb	r2, [r3, #15]
 128:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
 455              		.loc 1 128 0
 456 0100 7F22     		movs	r2, #127
 457 0102 5A70     		strb	r2, [r3, #1]
 129:./Src/i2c.c   ****       }          
 458              		.loc 1 129 0
 459 0104 1A70     		strb	r2, [r3]
 460              	.L27:
 131:./Src/i2c.c   ****         HAL_NVIC_DisableIRQ(DMA1_Channel5_IRQn);
 461              		.loc 1 131 0
 462 0106 344B     		ldr	r3, .L32
 463 0108 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 464 010a 002B     		cmp	r3, #0
 465 010c 98D0     		beq	.L13
 132:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 466              		.loc 1 132 0
 467 010e 0F20     		movs	r0, #15
 468 0110 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 469              	.LVL21:
 133:./Src/i2c.c   ****         //Copia dati
 470              		.loc 1 133 0
 471 0114 304C     		ldr	r4, .L32
 472 0116 0025     		movs	r5, #0
 473 0118 6573     		strb	r5, [r4, #13]
 135:./Src/i2c.c   ****         wii_JOYdati.ax = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[0]);
 474              		.loc 1 135 0
ARM GAS  /tmp/ccpxvAQg.s 			page 14


 475 011a A079     		ldrb	r0, [r4, #6]	@ zero_extendqisi2
 476 011c FFF7FEFF 		bl	nunchuk_decode_byte
 477              	.LVL22:
 478 0120 6070     		strb	r0, [r4, #1]
 136:./Src/i2c.c   ****         temp = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[5]);
 479              		.loc 1 136 0
 480 0122 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 481 0124 FFF7FEFF 		bl	nunchuk_decode_byte
 482              	.LVL23:
 483 0128 2070     		strb	r0, [r4]
 137:./Src/i2c.c   ****         
 484              		.loc 1 137 0
 485 012a A07A     		ldrb	r0, [r4, #10]	@ zero_extendqisi2
 486 012c FFF7FEFF 		bl	nunchuk_decode_byte
 487              	.LVL24:
 139:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc >> 1;
 488              		.loc 1 139 0
 489 0130 00F00203 		and	r3, r0, #2
 490 0134 A370     		strb	r3, [r4, #2]
 140:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc & 0x01;
 491              		.loc 1 140 0
 492 0136 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 493 0138 5B08     		lsrs	r3, r3, #1
 494 013a A370     		strb	r3, [r4, #2]
 141:./Src/i2c.c   ****         wii_JOYdati.bz = temp & 0x01;
 495              		.loc 1 141 0
 496 013c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 497 013e 03F00103 		and	r3, r3, #1
 498 0142 A370     		strb	r3, [r4, #2]
 142:./Src/i2c.c   ****         wii_JOYdati.done = 1;        
 499              		.loc 1 142 0
 500 0144 00F00100 		and	r0, r0, #1
 501              	.LVL25:
 502 0148 E070     		strb	r0, [r4, #3]
 143:./Src/i2c.c   **** 
 503              		.loc 1 143 0
 504 014a 0123     		movs	r3, #1
 505 014c 2371     		strb	r3, [r4, #4]
 145:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 506              		.loc 1 145 0
 507 014e 0F20     		movs	r0, #15
 508 0150 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 509              	.LVL26:
 146:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 510              		.loc 1 146 0
 511 0154 2573     		strb	r5, [r4, #12]
 147:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 512              		.loc 1 147 0
 513 0156 6573     		strb	r5, [r4, #13]
 148:./Src/i2c.c   ****         
 514              		.loc 1 148 0
 515 0158 A573     		strb	r5, [r4, #14]
 150:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 516              		.loc 1 150 0
 517 015a FFF7FEFF 		bl	HAL_GetTick
 518              	.LVL27:
 519 015e 2061     		str	r0, [r4, #16]
ARM GAS  /tmp/ccpxvAQg.s 			page 15


 151:./Src/i2c.c   ****       }
 520              		.loc 1 151 0
 521 0160 0B23     		movs	r3, #11
 522 0162 E373     		strb	r3, [r4, #15]
 523 0164 6CE7     		b	.L13
 524              	.L21:
 156:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 525              		.loc 1 156 0
 526 0166 1C4C     		ldr	r4, .L32
 527 0168 0023     		movs	r3, #0
 528 016a 2373     		strb	r3, [r4, #12]
 157:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;
 529              		.loc 1 157 0
 530 016c 6373     		strb	r3, [r4, #13]
 158:./Src/i2c.c   ****       wii_JOYdati.stato = 11;
 531              		.loc 1 158 0
 532 016e A373     		strb	r3, [r4, #14]
 159:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick(); 
 533              		.loc 1 159 0
 534 0170 0B23     		movs	r3, #11
 535 0172 E373     		strb	r3, [r4, #15]
 160:./Src/i2c.c   ****     break;
 536              		.loc 1 160 0
 537 0174 FFF7FEFF 		bl	HAL_GetTick
 538              	.LVL28:
 539 0178 2061     		str	r0, [r4, #16]
 161:./Src/i2c.c   ****   
 540              		.loc 1 161 0
 541 017a 61E7     		b	.L13
 542              	.L22:
 164:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 543              		.loc 1 164 0
 544 017c FFF7FEFF 		bl	HAL_GetTick
 545              	.LVL29:
 546 0180 154B     		ldr	r3, .L32
 547 0182 1B69     		ldr	r3, [r3, #16]
 548 0184 9842     		cmp	r0, r3
 549 0186 3FF45BAF 		beq	.L13
 165:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 550              		.loc 1 165 0
 551 018a 134B     		ldr	r3, .L32
 552 018c 0022     		movs	r2, #0
 553 018e 1A73     		strb	r2, [r3, #12]
 166:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 554              		.loc 1 166 0
 555 0190 5A73     		strb	r2, [r3, #13]
 167:./Src/i2c.c   ****         wii_JOYdati.stato = 0;
 556              		.loc 1 167 0
 557 0192 9A73     		strb	r2, [r3, #14]
 168:./Src/i2c.c   ****       }
 558              		.loc 1 168 0
 559 0194 DA73     		strb	r2, [r3, #15]
 560 0196 53E7     		b	.L13
 561              	.L23:
 173:./Src/i2c.c   ****         wii_JOYdati.stato = 1;
 562              		.loc 1 173 0
 563 0198 1048     		ldr	r0, .L32+4
ARM GAS  /tmp/ccpxvAQg.s 			page 16


 564 019a FFF7FEFF 		bl	HAL_I2C_GetState
 565              	.LVL30:
 566 019e 2028     		cmp	r0, #32
 567 01a0 12D0     		beq	.L31
 568              	.L28:
 177:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 569              		.loc 1 177 0
 570 01a2 FFF7FEFF 		bl	HAL_GetTick
 571              	.LVL31:
 572 01a6 0C4B     		ldr	r3, .L32
 573 01a8 1B69     		ldr	r3, [r3, #16]
 574 01aa C01A     		subs	r0, r0, r3
 575 01ac 0628     		cmp	r0, #6
 576 01ae 7FF647AF 		bls	.L13
 178:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 577              		.loc 1 178 0
 578 01b2 094C     		ldr	r4, .L32
 579 01b4 0023     		movs	r3, #0
 580 01b6 2373     		strb	r3, [r4, #12]
 179:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 581              		.loc 1 179 0
 582 01b8 6373     		strb	r3, [r4, #13]
 180:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 583              		.loc 1 180 0
 584 01ba A373     		strb	r3, [r4, #14]
 181:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();        
 585              		.loc 1 181 0
 586 01bc 0B23     		movs	r3, #11
 587 01be E373     		strb	r3, [r4, #15]
 182:./Src/i2c.c   ****       }      
 588              		.loc 1 182 0
 589 01c0 FFF7FEFF 		bl	HAL_GetTick
 590              	.LVL32:
 591 01c4 2061     		str	r0, [r4, #16]
 187:./Src/i2c.c   **** 
 592              		.loc 1 187 0
 593 01c6 3BE7     		b	.L13
 594              	.L31:
 174:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();        
 595              		.loc 1 174 0
 596 01c8 034C     		ldr	r4, .L32
 597 01ca 0123     		movs	r3, #1
 598 01cc E373     		strb	r3, [r4, #15]
 175:./Src/i2c.c   ****       }            
 599              		.loc 1 175 0
 600 01ce FFF7FEFF 		bl	HAL_GetTick
 601              	.LVL33:
 602 01d2 2061     		str	r0, [r4, #16]
 603 01d4 E5E7     		b	.L28
 604              	.L33:
 605 01d6 00BF     		.align	2
 606              	.L32:
 607 01d8 00000000 		.word	wii_JOYdati
 608 01dc 00000000 		.word	hi2c2
 609              		.cfi_endproc
 610              	.LFE68:
 612              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccpxvAQg.s 			page 17


 613              		.align	1
 614              		.global	HAL_I2C_MasterTxCpltCallback
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu softvfp
 620              	HAL_I2C_MasterTxCpltCallback:
 621              	.LFB70:
 200:./Src/i2c.c   **** 
 201:./Src/i2c.c   ****   
 202:./Src/i2c.c   ****   
 203:./Src/i2c.c   ****   
 204:./Src/i2c.c   ****     
 205:./Src/i2c.c   **** //HAL_I2C_Master_Transmit_DMA
 206:./Src/i2c.c   **** //HAL_I2C_Master_Receive_DMA
 207:./Src/i2c.c   **** 
 208:./Src/i2c.c   **** void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
 209:./Src/i2c.c   **** {
 622              		.loc 1 209 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL34:
 210:./Src/i2c.c   ****   if(hi2c->Instance == I2C2){
 628              		.loc 1 210 0
 629 0000 0268     		ldr	r2, [r0]
 630 0002 044B     		ldr	r3, .L37
 631 0004 9A42     		cmp	r2, r3
 632 0006 00D0     		beq	.L36
 633              	.L34:
 211:./Src/i2c.c   ****     wii_JOYdati.I2CTxDone = 1;
 212:./Src/i2c.c   ****   }
 213:./Src/i2c.c   **** }
 634              		.loc 1 213 0
 635 0008 7047     		bx	lr
 636              	.L36:
 211:./Src/i2c.c   ****     wii_JOYdati.I2CTxDone = 1;
 637              		.loc 1 211 0
 638 000a 034B     		ldr	r3, .L37+4
 639 000c 0122     		movs	r2, #1
 640 000e 1A73     		strb	r2, [r3, #12]
 641              		.loc 1 213 0
 642 0010 FAE7     		b	.L34
 643              	.L38:
 644 0012 00BF     		.align	2
 645              	.L37:
 646 0014 00580040 		.word	1073764352
 647 0018 00000000 		.word	wii_JOYdati
 648              		.cfi_endproc
 649              	.LFE70:
 651              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 652              		.align	1
 653              		.global	HAL_I2C_MasterRxCpltCallback
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
ARM GAS  /tmp/ccpxvAQg.s 			page 18


 657              		.fpu softvfp
 659              	HAL_I2C_MasterRxCpltCallback:
 660              	.LFB71:
 214:./Src/i2c.c   **** void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c){
 661              		.loc 1 214 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666              	.LVL35:
 215:./Src/i2c.c   ****   if(hi2c->Instance == I2C2){
 667              		.loc 1 215 0
 668 0000 0268     		ldr	r2, [r0]
 669 0002 044B     		ldr	r3, .L42
 670 0004 9A42     		cmp	r2, r3
 671 0006 00D0     		beq	.L41
 672              	.L39:
 216:./Src/i2c.c   ****     wii_JOYdati.I2CRxDone = 1;
 217:./Src/i2c.c   ****   }
 218:./Src/i2c.c   **** }
 673              		.loc 1 218 0
 674 0008 7047     		bx	lr
 675              	.L41:
 216:./Src/i2c.c   ****     wii_JOYdati.I2CRxDone = 1;
 676              		.loc 1 216 0
 677 000a 034B     		ldr	r3, .L42+4
 678 000c 0122     		movs	r2, #1
 679 000e 5A73     		strb	r2, [r3, #13]
 680              		.loc 1 218 0
 681 0010 FAE7     		b	.L39
 682              	.L43:
 683 0012 00BF     		.align	2
 684              	.L42:
 685 0014 00580040 		.word	1073764352
 686 0018 00000000 		.word	wii_JOYdati
 687              		.cfi_endproc
 688              	.LFE71:
 690              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 691              		.align	1
 692              		.global	HAL_I2C_ErrorCallback
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu softvfp
 698              	HAL_I2C_ErrorCallback:
 699              	.LFB72:
 219:./Src/i2c.c   **** void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
 220:./Src/i2c.c   **** {
 700              		.loc 1 220 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705              	.LVL36:
 221:./Src/i2c.c   ****   if(hi2c->Instance == I2C2){
 706              		.loc 1 221 0
 707 0000 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccpxvAQg.s 			page 19


 708 0002 044B     		ldr	r3, .L47
 709 0004 9A42     		cmp	r2, r3
 710 0006 00D0     		beq	.L46
 711              	.L44:
 222:./Src/i2c.c   ****     wii_JOYdati.I2CERROR = 1;
 223:./Src/i2c.c   ****   }
 224:./Src/i2c.c   **** }...
 712              		.loc 1 224 0
 713 0008 7047     		bx	lr
 714              	.L46:
 222:./Src/i2c.c   ****     wii_JOYdati.I2CERROR = 1;
 715              		.loc 1 222 0
 716 000a 034B     		ldr	r3, .L47+4
 717 000c 0122     		movs	r2, #1
 718 000e 9A73     		strb	r2, [r3, #14]
 719              		.loc 1 224 0
 720 0010 FAE7     		b	.L44
 721              	.L48:
 722 0012 00BF     		.align	2
 723              	.L47:
 724 0014 00580040 		.word	1073764352
 725 0018 00000000 		.word	wii_JOYdati
 726              		.cfi_endproc
 727              	.LFE72:
 729              		.comm	wii_JOYdati,20,4
 730              		.comm	hdma_i2c2_tx,56,4
 731              		.comm	hdma_i2c2_rx,56,4
 732              		.comm	hi2c2,60,4
 733              		.text
 734              	.Letext0:
 735              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 736              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 737              		.file 4 "./Drivers/CMSIS/Include/core_cm3.h"
 738              		.file 5 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 739              		.file 6 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 740              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 741              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 742              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.2.0/include/stddef.h"
 743              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 744              		.file 11 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 745              		.file 12 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 746              		.file 13 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 747              		.file 14 "./Inc/i2c.h"
 748              		.file 15 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 749              		.file 16 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccpxvAQg.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c.c
     /tmp/ccpxvAQg.s:16     .text.WiiNunchuck_INIT:0000000000000000 $t
     /tmp/ccpxvAQg.s:23     .text.WiiNunchuck_INIT:0000000000000000 WiiNunchuck_INIT
     /tmp/ccpxvAQg.s:77     .text.WiiNunchuck_INIT:0000000000000038 $d
                            *COM*:000000000000003c hi2c2
                            *COM*:0000000000000014 wii_JOYdati
     /tmp/ccpxvAQg.s:83     .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccpxvAQg.s:90     .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccpxvAQg.s:206    .text.MX_I2C2_Init:0000000000000090 $d
     /tmp/ccpxvAQg.s:215    .text.nunchuk_decode_byte:0000000000000000 $t
     /tmp/ccpxvAQg.s:222    .text.nunchuk_decode_byte:0000000000000000 nunchuk_decode_byte
     /tmp/ccpxvAQg.s:242    .text.WiiNunchuck_TASK:0000000000000000 $t
     /tmp/ccpxvAQg.s:249    .text.WiiNunchuck_TASK:0000000000000000 WiiNunchuck_TASK
     /tmp/ccpxvAQg.s:272    .text.WiiNunchuck_TASK:0000000000000012 $d
     /tmp/ccpxvAQg.s:607    .text.WiiNunchuck_TASK:00000000000001d8 $d
     /tmp/ccpxvAQg.s:613    .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/ccpxvAQg.s:620    .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/ccpxvAQg.s:646    .text.HAL_I2C_MasterTxCpltCallback:0000000000000014 $d
     /tmp/ccpxvAQg.s:652    .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccpxvAQg.s:659    .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/ccpxvAQg.s:685    .text.HAL_I2C_MasterRxCpltCallback:0000000000000014 $d
     /tmp/ccpxvAQg.s:691    .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/ccpxvAQg.s:698    .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/ccpxvAQg.s:724    .text.HAL_I2C_ErrorCallback:0000000000000014 $d
                            *COM*:0000000000000038 hdma_i2c2_tx
                            *COM*:0000000000000038 hdma_i2c2_rx
                     .debug_frame:0000000000000010 $d
     /tmp/ccpxvAQg.s:285    .text.WiiNunchuck_TASK:000000000000001f $d
     /tmp/ccpxvAQg.s:285    .text.WiiNunchuck_TASK:0000000000000020 $t

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit_DMA
HAL_Delay
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
Error_Handler
HAL_GetTick
HAL_I2C_Master_Receive_DMA
HAL_NVIC_DisableIRQ
HAL_I2C_GetState
